{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  isAuthenticated: false\n};\nconsole.log(initialState.isAuthenticated);\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    login(state) {\n      return {\n        ...state,\n        isAuthenticated: true\n      };\n    },\n    logout(state) {\n      return {\n        ...state,\n        isAuthenticated: false\n      };\n    }\n  }\n});\nexport const {\n  login,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","isAuthenticated","console","log","authSlice","name","reducers","login","state","logout","actions","reducer"],"sources":["C:/Users/Admin/OneDrive/Робочий стіл/project/redux/src/store/authSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n};\r\n\r\nconsole.log(initialState.isAuthenticated);\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    login(state) {\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n      };\r\n    },\r\n    logout(state) {\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,eAAe,EAAE;AACnB,CAAC;AAEDC,OAAO,CAACC,GAAG,CAACH,YAAY,CAACC,eAAe,CAAC;AAEzC,MAAMG,SAAS,GAAGL,WAAW,CAAC;EAC5BM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,KAAKA,CAACC,KAAK,EAAE;MACX,OAAO;QACL,GAAGA,KAAK;QACRP,eAAe,EAAE;MACnB,CAAC;IACH,CAAC;IACDQ,MAAMA,CAACD,KAAK,EAAE;MACZ,OAAO;QACL,GAAGA,KAAK;QACRP,eAAe,EAAE;MACnB,CAAC;IACH;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEM,KAAK;EAAEE;AAAO,CAAC,GAAGL,SAAS,CAACM,OAAO;AAElD,eAAeN,SAAS,CAACO,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}